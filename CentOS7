Resetting root password
# delete rhgb quiet
# add rd.break to end of linux 16 line
# ctrl + x
# mount -o remount,rw /sysroot
# chroot /sysroot
# passwd
# touch /.autorelabel
# mount -o remount,ro /
# exit
# exit


or 

# delete rhgb quiet
# add rd.break to end of linux 16 line
# ctrl + x
# mount -o remount,rw /sysroot
# chroot /sysroot
# passwd
# load_policy -i 
# chcon -t shadow_t /etc/shadow
# mount -o remount,ro /
# exit
# exit


Configure network interfaces
# nmcli 
# nmtui

VIM
# dd (delete row)
# u (undo)
# v (visual, used for selecting)
# / (search)
# n (next)

Hard and Symbolic links
# ln (hard link)
# ln -s /etc/hosts test/mylink (symbolic link) 

Copy files
cp /etc/[a,e,o]* test/

rename file
mv goodbye hello (rename goodbye to hello)

find files
find / -user lisa (find all files owned by lisa)wh

Backups with Tar
# tar cvf /root/etc.tar /etc (create verbose file)
# file etc.tar (tells you the file type)
# tar czvf /root/etc2.tgz /etc (create zipped verbose file)
# tar tvf etc2.tgz (tell me what’s in the zip)
# tar xvf etc2.tgz -C /tmp (extract the file)
# tar xvf /root/etc.tar -C / etc/wgetrc (extract the file wgetrc and put it in the current directory)

regex
^abc (start of line)
$abc (end of line)
1|8 (any lines with 1 or 8)

text files
cat cities (will show contents of file)
less cities (lets you scroll)
/ (lets you search while using using less)
head -n 20 cities (first 20 lines)
tail -n 1 cities (last 1 line)
cut -f -d 1 cities (show files in 1 column)
sort -n numbers (sort by number)
sort -f sortfile (not case sensitive) 
echo hello | tr [:lower:] [:upper:]

grep 
grep lisa *
grep lisa * 2> /dev/null
grep -l  lisa * 2> /dev/null
grep -i  lisa * 2> /dev/null (case insensitive)
grep -iR  lisa * 2> /dev/null | grep -v Binary
grep ^root * 2> /dev/null
grep ^…$ * 2> /dev/null

sed
sed -i ’s/linda/julia/g’ passwd
sed -n ‘5p’ /etc/passwd

awk
ps aux | grep apache | awk ‘{ print $2 }'

-------------------------------------------------------------------
try with NUC: ctrl + alt + f1, ctrl + alt + f2 etc to open extra terminal windows
--------------------------------------------------------------------

ssh
vim .ssh/known_hosts (open, type dd to delete)
ssh -p 2022 tammy@ldap.redhatcert.com
vim /etc/ssh/sshd_config
can change port and permitrootlogin no

ssh keys
ssh-keygen

copy ssh key
ssh-copy-id localhost (copy id to localhost server)
ssh-copy-id -p 2022 root@45.55.198.13

copy files
scp newfile root@45.55.198.13
scp -P 2022 newfile root@45.55.198.13

users
useradd —help
useradd -c myuser -e 2015-12-05 -s /bin/tcsh laura
tail -n 1 /etc/passwd
tail -n 1 /etc/shadow

groups
id lisa
groupadd accounting
vim /etc/groups and add the name of the person you want
usermod -aG accounting laura
grep laura /etc/group

user and group config
/etc/login.defs (set params like expiry dates)
/etc/detault/used
/etc/skel (any files in here will show up in home of all users)
ls -al (see all files in a user’s home account with details)
usermod -aG support lisa

User properties
chage -l lisa
passwd -l laura 
chage -E 2015-07-01 

LDAP
yum install authconfig-gtk 
yum install nscd nss-pam-ldapd pam_ldap 


automount/autofs
yum install autofs
vim /etc/auto.master


vim /etc/auto.guests
*     -rw     nfsserver:/home/guests/& 


NFS
yum search nfs
yum install nfs-utils
vim /etc/exports 
/data     -rw     *(rw,no_root_squash) 

systemctl status -l nfs
mkdir /data
cd /data
touch nfsfile1
systemctl start nfs
showmount -e localhost
mount localhost:/data /mnt
cd /mnt
ls (the files are now in there!)

vim /etc/auto.master
/nfsserver      /etc/auto.nfsserver


vim /etc/auto.nfsserver (create the file)
blah     -rw     localhost:/data


systemctl restart nfs
cd /nfsserver
cd blah
ls (the files are in there) 

REVISED NOTES
yum install autofs
yum install nfs-utils
vim /etc/exports
/cool     *rw     *(rw,no_root_squash)
 cd
mkdir /cool
touch tammy
systemctl start nfs
showmount -e localhost
mount localhost:/cool /coolmount
vim /etc/auto.master
/coolmount      /etc/auto.coolmount
 

LDAP config files
 /etc/nsswitch.conf
 /etc/pam.d/login
/etc/pam.d/system-auth
/etc/nslcd.conf
/etc/openldap/cacerts/ (certificate downloaded is in here)
tail -f /var/log/messages

Group permissions
chgrp accounting account (accounting group access to account directory)
chown lisa sales (makes lisa the owner of the sales group)
cat /etc/group (shows all groups that exist)

changing group ownership
chmod 750 myfile
read = 4
write = 2
execute = 1
(ugo refers to users, groups, others)
chown lori account #makes lori account owner

special permissions
set user ID #not really used

set group ID #they ask on the exam to setup shared group environment
chmod g+s account (makes account shared environment group) 
usermod -G laura account (adds laura to the account group)

sticky bit
chmod +t *

ACLs
#give permissions to more than one user/group
setfacl
setfacl -m g:sales:rx /data/account #group sales has read& execute
setfacl -d g:sales:rx /data/account

#give sales group access to account
getfacl account
setfacl -R -m g:sales:rx account #modify sales read+ex on account
setfacl -m d:g:sales:rx account #set for future default 
cp -r sales/* account/ (copy everything from sales to account)

history #shows a list of your past commands you have run

Create the directory /data/Sales where members of the group sales can read and write files, and members of account can only read files #change the owner to give group full ownership
mkdir Sales
chgrp Sales Sales
chmod 770 * (set everything in folder to 770)
setfacl -R -m g:Account:rx Sales
setfacl  -m d:g:Account:rx Sales
setfacl -R -m g:Salest:rx Account
setfacl -m d:g:Salest:rx Account

Network interfaces
Setting temporary solutions
ip addr show #see network interfaces
ip route show #shows routing table 
ip addr add dev ens33 10.0.0.10/24 #add to the device named ens33
ip -s link #stats
ip route add 20.0.0.0/8 via 192.168.4.4  #local network IP
cd /etc/sysconfig/network-scripts
vim /etc/hostname

setting permanent solutions
nmcli 

Find network script directory:
find / -type d -name 'network*'
/etc/sysconfig/network-scripts #here it is! 

nmtui
systemctl restart NetworkManager
systemctl status NetworkManager

DNS
For exam need to change default DNS route
vim /etc/sysconfig/network-scripts/ifcfg-ens33
add GATEWAY0=ip
nmcli con down enp0s3; nmcli con up enp0s3
DNS1=ip 
DNS2=8.8.8.8 (google)

Network Analysis
hostname (check own hostname)
ping (connectivity)
traceroute (get routing information)
dig (get DNS information)
nmap (gets information about what remote services are available)
netstat 
     netstat -i (packet info for avail network cards)
     netstat - tulpen (listening ports)

ip route show (check gateway)
cat /etc/resolve.conf (check DNS)

test networking
ping 1c 192.168.4.2
ping 1c 8.8.8.8 
ping -f 192.168.4.2 (good for bandwidth tests, not connectivity)

packet route
traceroute 
traceroute 8.8.8.8 

check domain resolution
host ldap.rhatcertification.com

dns name lookup process
dig ldap.rhatcertification.com

systemctl restart NetworkManager (whenever you make changes to the network scripts file (if cfg) 



can change hostname in nmtui

after making changes:
nmcli conn down enp0s3; nuclei conn up enp0s3

Process Management
sleep 6000
ctrl + z #stops jobs
bg #run job in background
jobs #show all jobs running
fg 1
ps aux | grep http
ps fax #child processes
run an example job dd if=/dev/zero of=/dev/null &
top
in top press 1 to see how many CPUs 


Signals to processes
In top press k to send a signal, type 2909, press enter
Or from terminal: kill -9 2909 
killall dd

Change nice values of processes
In top press r 
type process id
-5 (will increase priority by 5, it gets more CPU cycles) 

Managing Software
yum is a metapackage handler
yum install apache #it grabs dependencies 

Create your own local repo
mkdir repo in root directory
cd /etc/yum.repos.d/
vim myrepo.repo #it’s 3 slashes because in root directory

yum repolist #it shows up!


yum search nmap
yum install nmap 
yum list all
yum list installed
yum what provides */semanage 

RPM
rpm -qc chrony
rpm -qa | grep http #which version is install on system
rpm -qpl yp-tools-……. #shows what’s in the package
repoquery 

FTP repo
yum install vsftpd
systemctl start vsftp 
#find where to make the ftp public folder
grep ftp /etc/passwd
cd /var/ftp/pub
mkdir downloads
cd /downloads
wget ftp://......packages.tgz
tar zxvf packages.tgz
#next configure server 
vim /etc/yum.repos.d/downloads.repo

REVISED LIST
For exam
mkdir downloads
cd /downloads
wget ftp://.....packages.tgz
vim /etc/yum.repos.d/downloads.repo
createrepo /downloads/
yum repolist

Making a repo
mkdir repo in root directory
cd /etc/yum.repos.d/
vim myrepo.repo 

yum repolist #it shows up!
wget ftp://server.rhatcertification.com/pub/packages.tgz
untar
createrepo /downloads/

#in file:
[downloads]
name=downloads
baseurl=file:///downloads
gpgcheck=0

Working with VMs
KVM 
# yum install kvm libvirt virt-manager qemu-kvm (all the kvm stuff)
getting out of new virtual machine (use left ctrl+alt)
virsh list —all
virsh destroy 

scheduling tasks
at 9:15 #opens at prompt
logger hi 
atq # check it will run

cron
contab -e
0 4 * * * tar czf /root/etc.tgz /etc (0 minutes, 4 hours, every day, every month, every day of week, tarball in home directory - it’s a backup of /etc

logging
tail /var/log/secure
journalctl _COMM=su | less #looks in the log for a specific argument 
journalctl _COMM=su -o verbose | less
vim /etc/logrotate.conf #edit the values in there, don’t need to restart, it’s run through a cronjob 

Storage 
first make a disk drive
fdisk -l #list disks and find the one you need
fdisk /dev/mapper/centos-root 


#sda1 - first partition on hard disk connected to boot
fdisk -l
fdisk /dev/sdb
n
p
enter
enter
+100M
w
cat /proc/partitions

LVM
fdisk /dev/sdb
n
l (logical partition)
t (lvm)
7
l (list partition types)
8e (Linux LVM)
w
#if an error occurs run partprobe /dev/sdb
cat /proc/partitions 

vgcreate vgdisk /dev/sdb7
lvcreate -L 100%FREE -n lvdisk vgdisk 
lvs

mkfs.xfs /dev/vgdisk/lvdisk
mkdir /group
mount /dev/vgdisk/lvdisk /group
mount | grep group

make the disk bigger
vgextend —help
vgextend vgdisk /dev/sdb8

grow partition
lvextend -l +100%FREE -r /dev/vgdisk/lvdisk

df -h (shows results)


Managing the Kernel
lsmod #lists all the kernel modules
modinfo iwlwifi
cd /etc/modprobe.d
vim iwlwifi.conf
modproble iwlwifi
dmesg

Kickstart
modify the kickstart file, it’s in the home directory
vim anaconda-ks.cfg
vim anaconda-ks.cfg 
comment on root-passwd line so it asks for a password
change hostname / local machine name to server1.example.com

Boot process
interrupt boot process, modify page
remove rhgb quit
add to end of line: systemd.unit=emergency.target 
login 
mount -o remount,rw /
rm /etc/crypttab
modify /etc/fstab and take out encrypted volumes if needed


go into grub menu
remove rhgb quiet from kernel line
add to end of line —> systemd.unit=emergency.target
ctrl + x to start booting
mount -o remount,rw / (because it’s read only)
systemctl.reboot

Auto mounting
mkdir /test
cd /etc/systemd/system
vim test.mount
—— start of file
[Unit]
Description = test mount

[Mount]
what = /dev/sdb5
where = /test
Type = ext4

[Install]
Wantedby = multi-user.target

——end of file
systemctl start test.mount
systemctl status test.mount

mount | grep test
umount /test
vim test.automount

— start of file
[Unit]
Description = test automount

[Automount]
Where = /test

[Install]
Wantedby = multi-user.target
—end of file

systemctl stop test.mount
systemctl start test.automount
systemctl status test.automount

Managing HTTPD services  // apache
yum install httpd
systemctl enable httpd
vim /etc/httpd/conf/httpd.conf
cd /var/www/html
vim index.html
systemctl start http
yum install elinks
elinks http://localhost #this will load it up and you can test it

SELinux
vim /etc/httpd/conf/httpd.conf #update port to listen on to 800
systemctl restart httpd
#you will get an SELinux alert
paste the command in with http_port_t 
systemctl restart httpd
#to check your work
netstat -Ztulpen | grep 800

Firewalls
firewall-config #pops up a graphical interface
click dmx, select permanent, select services
close firewall-config
to check
#firewall-cmd —list-all

FTP services
yum install vsftpd
vim /etc/vsftpd/vsftpd.conf to change config
systemctl enable vsftpd
systemctl start vsftpd
systemctl status vsftpd
grep ftp /etc/passwd #to find out where ftp stuff goes - it’s /var/ftp
check firewall #firewall-cmd —list-all
check selinux #getsebool -a | grep ftp 
yum install -y lftp
lsftp localhost
ls, cd pub, get hiya (move to folder, download hiya file)
quit 


Configure Time Services
timedatectl status #see current settings
timedatectl set-ntp yes
systemctl status chronyd
vim /etc/chrony.conf
comment out the servers we don’t want
add #server.rhatcertification.com iburst
timedatectl status
hwclock (shows what the time is on the hardware)
hwclock —systohc (will sync the hardware clock to same time)


autofs for test
vim /etc/exports
/data     -rw     *(rw,no_root_squash)
systemctl start nfs
showmount -e localhost
mount localhost:/data /mnt

now make it an auto mount
vim /etc/auto.master
/nfsserver     /etc/auto.nfsserver
vim /etc/auto.nfsserver
blah      -rw     localhost:/data 
systemct restart autofs
cd /nfsserver
cd blah
ls (files are in here) 








mounting file server
vim /etc/exports
*        -rw     *(rw,no_root_squash)
systemctl start nfs
showmount -e localhost
mount localhost:/data mnt

now make it automount
vim /etc/auto.master
/nfsserver     /etc/auto.nfsserver
vim /etc/auto.nfsserver
blah     -rw     localhost:/data
systemctl restart autofs
cd /nfsserver
cd blah
ls 

vim /etc/auto.master
/nfsserver     /etc/auto.nfsserver
vim /etc/autonfsserver
blah     -rw     localhost:/data
systemctl restart autofs
cd /nfsserver
cd blah


